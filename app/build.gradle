plugins {
    id 'com.android.application'
}
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
    }

    defaultConfig {
        applicationId "com.example.cureya_chatbot"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/library_release.kotlin_module'


    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.cloud:google-cloud-dialogflow:2.1.0'
    implementation 'io.grpc:grpc-okhttp:1.30.0'
    // youtube video player.

       implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'


    // circular imageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //progress bar

    implementation 'com.sasank.roundedhorizontalprogress:roundedhorizontalprogress:1.0.1'
    implementation 'com.google.android.material:material:1.5.0-alpha02'
    implementation'com.eyalbira.loadingdots:loading-dots:1.0.2'
   // compile 'com.github.glomadrian:loadingballs:1.1@aar'

        // Import the Firebase BoM
       /* implementation platform('com.google.firebase:firebase-bom:28.4.0')

        // When using the BoM, you don't specify versions in Firebase library dependencies

        // Declare the dependency for the Firebase SDK for Google Analytics
        implementation 'com.google.firebase:firebase-analytics'*/

        // Declare the dependencies for any other desired Firebase products
        // For example, declare the dependencies for Firebase Authentication and Cloud Firestore
//        implementation 'com.google.firebase:firebase-auth:21.0.1'
//        implementation 'com.google.firebase:firebase-firestore:23.0.3'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
   implementation platform('com.google.firebase:firebase-bom:28.4.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-auth'

  //  implementation 'com.google.firebase:firebase-firestore'
}
/*
configurations.implementation.exclude(group: 'com.google.firebase', module: 'jetified-protolite-well-known-types')
configurations.implementation.exclude(group: 'com.google.api', module: 'com.google.api.grpc:proto-google-common-protos:1.18.0')


configurations.implementation.setCanBeResolved(true)
task findDuplicates {
    doLast {
        Map<String, List<File>> pathMap = [:]
        configurations.implementation.each { file ->
            FileTree tree = file.directory ? fileTree(file) : zipTree(file)
            tree.visit { FileVisitDetails fvd ->
                if (!fvd.directory) {
                    String path = fvd.path
                    List<File> fileList = pathMap[path]?:[]
                    fileList << fvd.file
                    pathMap[path] = fileList
                }
            }
        }
        pathMap.each { path, fileList ->
            if (fileList.size() > 1) {
                println "Found duplicate $path in $fileList"
            }
        }
    }
}*/
